{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_seo__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","title","m","module","exports","require","default","d","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAYeO,UARM,kBACjBH,EAAAI,EAAAC,cAAA,WACIL,EAAAI,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXN,EAAAI,EAAAC,cAAA,uBACAL,EAAAI,EAAAC,cAAA,2FCRR,IAAsBE,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CX,EAAAgB,EAAAd,EAAA,sBAAAe,IAAA,IAAAd,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAe,EAAAlB,EAAA,GAAAmB,EAAAnB,EAAAK,EAAAa,GAYME,GAZNpB,EAAA,IAAAA,EAAA,KAY2BqB,IAAMC,cAAc,KAEzCL,EAAc,SAAAM,GAAK,OACvBnB,EAAAI,EAAAC,cAACW,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMG,MACLD,EAAgBF,EAAMI,QAAUF,EAAgBF,EAAMI,OAAOD,MAEtDH,EAAMK,QAAUL,EAAMM,UAC5BN,EAAMG,KAAOH,EAAMG,KAAKA,KAAOD,EAAgBF,EAAMI,OAAOD,MAGvDtB,EAAAI,EAAAC,cAAA,uCA4BfQ,EAAYa,UAAY,CACtBJ,KAAMK,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,gHCpDtB,SAASC,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,SAAU/B,EAAS2B,EAAT3B,MAC9C,OACIgC,EAAAlC,EAAAC,cAACkC,EAAA,EAAD,CACIhB,MAAOiB,EACPhB,OAAQ,SAAAF,GACJ,IAAMmB,EACFP,GAAeZ,EAAKoB,KAAKC,aAAaT,YAC1C,OACII,EAAAlC,EAAAC,cAACuC,EAAAxC,EAAD,CACIyC,eAAgB,CACZV,QAEJ7B,MAAOA,EACPwC,cAAa,KACbV,KAAM,CACF,CACIW,KAAI,cACJC,QAASP,GAEb,CACIQ,SAAQ,WACRD,QAAS1C,GAEb,CACI2C,SAAQ,iBACRD,QAASP,GAEb,CACIQ,SAAQ,UACRD,QAAO,WAEX,CACID,KAAI,eACJC,QAAO,WAEX,CACID,KAAI,kBACJC,QAAS1B,EAAKoB,KAAKC,aAAaO,QAEpC,CACIH,KAAI,gBACJC,QAAS1C,GAEb,CACIyC,KAAI,sBACJC,QAASP,IAGZU,OACGd,EAASe,OAAS,EACZ,CACIL,KAAI,WACJC,QAASX,EAASgB,KAAT,OAEb,IAETF,OAAOf,MAtD5Bd,KAAAgC,IA8DRtB,EAAIuB,aAAe,CACfpB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGdL,EAAIN,UAAY,CACZQ,YAAaP,IAAUE,OACvBM,KAAMR,IAAUE,OAChBO,KAAMT,IAAU6B,MAChBnB,SAAUV,IAAU8B,QAAQ9B,IAAUE,QACtCvB,MAAOqB,IAAUE,OAAOC,YAGbE,MAEf,IAAMQ,EAAY,mYC/EZkB,EAAmB,SAAAzB,GAAkB,IAAf0B,EAAe1B,EAAf0B,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAO9C,IAAMZ,cAAc2D,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBhC,UAAY,CAC3BiC,SAAUhC,IAAUyC,MAAM,CACxBL,SAAUpC,IAAUE,OAAOC,aAC1BA,YAGU4B","file":"component---src-pages-404-js-e4b3db69384bb06bfd30.js","sourcesContent":["import React from 'react'\n\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n    <div>\n        <SEO title=\"404: Not found\" />\n        <h1>NOT FOUND</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </div>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n    return (\n        <StaticQuery\n            query={detailsQuery}\n            render={data => {\n                const metaDescription =\n                    description || data.site.siteMetadata.description\n                return (\n                    <Helmet\n                        htmlAttributes={{\n                            lang,\n                        }}\n                        title={title}\n                        titleTemplate={`%s`}\n                        meta={[\n                            {\n                                name: `description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:title`,\n                                content: title,\n                            },\n                            {\n                                property: `og:description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:type`,\n                                content: `website`,\n                            },\n                            {\n                                name: `twitter:card`,\n                                content: `summary`,\n                            },\n                            {\n                                name: `twitter:creator`,\n                                content: data.site.siteMetadata.author,\n                            },\n                            {\n                                name: `twitter:title`,\n                                content: title,\n                            },\n                            {\n                                name: `twitter:description`,\n                                content: metaDescription,\n                            },\n                        ]\n                            .concat(\n                                keywords.length > 0\n                                    ? {\n                                          name: `keywords`,\n                                          content: keywords.join(`, `),\n                                      }\n                                    : []\n                            )\n                            .concat(meta)}\n                    />\n                )\n            }}\n        />\n    )\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n}\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}