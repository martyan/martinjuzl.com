{"version":3,"sources":["webpack:///./src/components/Examples/Basic.js","webpack:///./src/components/Examples/CounterClockwise.js","webpack:///./src/components/Examples/Cut.js","webpack:///./src/components/Examples/WithPointer.js","webpack:///./src/components/Examples/InverseProgress.js","webpack:///./src/components/Examples/CustomIndicator.js","webpack:///./src/components/Examples/Timer.js","webpack:///./src/components/Examples/Countdown.js","webpack:///./src/components/Examples/Examples.js","webpack:///./src/pages/react-customizable-progressbar/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Basic","_ref","progress","react_default","a","createElement","className","href","target","ReactCustomizableProgressbar_default","radius","strokeWidth","strokeColor","strokeLinecap","trackStrokeWidth","CounterClockwise","counterClockwise","Cut","trackStrokeLinecap","cut","rotate","WithPointer","pointerRadius","pointerStrokeWidth","pointerStrokeColor","InverseProgress","fillColor","inverse","CustomIndicator","trackStrokeColor","initialAnimation","transition","trackTransition","Timer","elapsed","_this","start","clear","interval","clearInterval","setInterval","_this$props","props","initialSeconds","totalSeconds","state","setState","onChange","Component","propTypes","PropTypes","number","isRequired","func","initialProgress","Indicator","seconds","elapsedSeconds","date","moment","startOf","h","hour","m","minute","format","getText","Countdown","roundProgress","factor","Math","pow","round","_this$state","pointerFill","Countdown_Indicator","Examples_Timer","handleTimer","Examples","type","value","e","parseInt","min","max","Examples_Basic","Examples_CounterClockwise","Examples_Cut","Examples_WithPointer","Examples_InverseProgress","Examples_CustomIndicator","components_Examples_Countdown","RCP","seo","title","keywords","onClick","ReactGA","event","category","action","components_Examples_Examples","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","data","query","render","children","object","string","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","site","siteMetadata","author","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape"],"mappings":"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","file":"component---src-pages-react-customizable-progressbar-index-js-46af4452f1939ca017a8.js","sourcesContent":["import React from 'react'\nimport ProgressBar from 'react-customizable-progressbar'\n\nconst Basic = ({ progress }) => (\n    <div className=\"item\">\n        <div className=\"title\">\n            <span>Basic</span>\n            <a\n                href=\"https://github.com/martyan/react-customizable-progressbar/blob/master/examples/Basic.js\"\n                target=\"_blank\"\n            >\n                code <i className=\"fa fa-external-link-square\" />\n            </a>\n        </div>\n\n        <ProgressBar\n            radius={100}\n            progress={progress}\n            strokeWidth={18}\n            strokeColor=\"#5d9cec\"\n            strokeLinecap=\"square\"\n            trackStrokeWidth={18}\n        >\n            <div className=\"indicator\">\n                <div>{progress}%</div>\n            </div>\n        </ProgressBar>\n    </div>\n)\n\nexport default Basic\n","import React from 'react'\nimport ProgressBar from 'react-customizable-progressbar'\n\nconst CounterClockwise = ({ progress }) => (\n    <div className=\"item\">\n        <div className=\"title\">\n            <span>Counter-clockwise</span>\n            <a\n                href=\"https://github.com/martyan/react-customizable-progressbar/blob/master/examples/CounterClockwise.js\"\n                target=\"_blank\"\n            >\n                code <i className=\"fa fa-external-link-square\" />\n            </a>\n        </div>\n\n        <ProgressBar\n            radius={100}\n            progress={progress}\n            strokeWidth={18}\n            strokeColor=\"#a0d468\"\n            strokeLinecap=\"round\"\n            trackStrokeWidth={18}\n            counterClockwise\n        >\n            <div className=\"indicator\">\n                <div>{progress}%</div>\n            </div>\n        </ProgressBar>\n    </div>\n)\n\nexport default CounterClockwise\n","import React from 'react'\nimport ProgressBar from 'react-customizable-progressbar'\n\nconst Cut = ({ progress }) => (\n    <div className=\"item\">\n        <div className=\"title\">\n            <span>Cut</span>\n            <a\n                href=\"https://github.com/martyan/react-customizable-progressbar/blob/master/examples/Cut.js\"\n                target=\"_blank\"\n            >\n                code <i className=\"fa fa-external-link-square\" />\n            </a>\n        </div>\n\n        <ProgressBar\n            radius={100}\n            progress={progress}\n            strokeWidth={28}\n            strokeColor=\"#ffce54\"\n            strokeLinecap=\"butt\"\n            trackStrokeWidth={14}\n            trackStrokeLinecap=\"butt\"\n            cut={120}\n            rotate={-210}\n        >\n            <div className=\"indicator\">\n                <div>{progress}%</div>\n            </div>\n        </ProgressBar>\n    </div>\n)\n\nexport default Cut\n","import React from 'react'\nimport ProgressBar from 'react-customizable-progressbar'\n\nconst WithPointer = ({ progress }) => (\n    <div className=\"item\">\n        <div className=\"title\">\n            <span>With pointer</span>\n            <a\n                href=\"https://github.com/martyan/react-customizable-progressbar/blob/master/examples/WithPointer.js\"\n                target=\"_blank\"\n            >\n                code <i className=\"fa fa-external-link-square\" />\n            </a>\n        </div>\n\n        <ProgressBar\n            radius={100}\n            progress={progress}\n            strokeWidth={4}\n            strokeColor=\"indianred\"\n            trackStrokeWidth={4}\n            pointerRadius={8}\n            pointerStrokeWidth={5}\n            pointerStrokeColor=\"indianred\"\n        >\n            <div className=\"indicator\">\n                <div>{progress}%</div>\n            </div>\n        </ProgressBar>\n    </div>\n)\n\nexport default WithPointer\n","import React from 'react'\nimport ProgressBar from 'react-customizable-progressbar'\n\nconst InverseProgress = ({ progress }) => (\n    <div className=\"item\">\n        <div className=\"title\">\n            <span>Inverse progress</span>\n            <a\n                href=\"https://github.com/martyan/react-customizable-progressbar/blob/master/examples/InverseProgress.js\"\n                target=\"_blank\"\n            >\n                code <i className=\"fa fa-external-link-square\" />\n            </a>\n        </div>\n\n        <ProgressBar\n            radius={100}\n            progress={progress}\n            fillColor=\"#f2f2f2\"\n            strokeWidth={2}\n            strokeColor=\"#656d78\"\n            trackStrokeWidth={2}\n            pointerRadius={12}\n            pointerStrokeWidth={2}\n            pointerStrokeColor=\"#656d78\"\n            inverse\n        >\n            <div className=\"indicator\">\n                <div>{progress}%</div>\n            </div>\n        </ProgressBar>\n    </div>\n)\n\nexport default InverseProgress\n","import React from 'react'\nimport ProgressBar from 'react-customizable-progressbar'\n\nconst CustomIndicator = ({ progress }) => (\n    <div className=\"item\">\n        <div className=\"title\">\n            <span>Custom indicator</span>\n            <a\n                href=\"https://github.com/martyan/react-customizable-progressbar/blob/master/examples/CustomIndicator.js\"\n                target=\"_blank\"\n            >\n                code <i className=\"fa fa-external-link-square\" />\n            </a>\n        </div>\n\n        <ProgressBar\n            radius={100}\n            progress={progress}\n            cut={120}\n            rotate={-210}\n            strokeWidth={16}\n            strokeColor=\"#5d9cec\"\n            strokeLinecap=\"square\"\n            trackStrokeWidth={8}\n            trackStrokeColor=\"#e6e6e6\"\n            trackStrokeLinecap=\"square\"\n            pointerRadius={0}\n            initialAnimation={true}\n            transition=\"1.5s ease 0.5s\"\n            trackTransition=\"0s ease\"\n        >\n            <div className=\"indicator-volume\">\n                <div className=\"inner\">\n                    <div className=\"icon\">\n                        <i className=\"fa fa-volume-up\" />\n                    </div>\n                    <div className=\"percentage\">{progress}%</div>\n                </div>\n            </div>\n        </ProgressBar>\n    </div>\n)\n\nexport default CustomIndicator\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nclass Timer extends Component {\n\n    state = {\n        elapsed: 0\n    }\n\n    componentDidMount = () => {\n        this.start()\n    }\n\n    componentWillUnmount = () => {\n        this.clear()\n    }\n\n    start = () => {\n        if (this.interval) clearInterval(this.interval)\n\n        this.interval = setInterval(() => {\n            const { initialSeconds, totalSeconds } = this.props\n            if (this.state.elapsed + initialSeconds === totalSeconds) {\n                if (this.interval) clearInterval(this.interval)\n                return\n            }\n            const elapsed = this.state.elapsed + 1\n            this.setState({ elapsed })\n            if (this.props.onChange) this.props.onChange(elapsed)\n        }, this.props.interval)\n    }\n\n    clear = () => {\n        if (this.interval) clearInterval(this.interval)\n    }\n\n    render = () => null\n\n}\n\nTimer.propTypes = {\n    initialSeconds: PropTypes.number.isRequired,\n    totalSeconds: PropTypes.number.isRequired,\n    onChange: PropTypes.func,\n    interval: PropTypes.number.isRequired\n}\n\nexport default Timer\n","import React, { Component } from 'react'\nimport moment from 'moment'\nimport ProgressBar from 'react-customizable-progressbar'\nimport Timer from './Timer'\nimport './Countdown.scss'\n\nconst totalSeconds = 60\nconst initialSeconds = 15\nconst initialProgress = (initialSeconds / totalSeconds) * 100\n\nconst getText = date => {\n    const h = date.hour()\n    const m = date.minute()\n\n    if (h) return date.format('h[h] m[m] s[s]')\n    else if (m) return date.format('m[m] s[s]')\n    else return date.format('s[s]')\n}\n\nconst Indicator = props => {\n    const seconds = totalSeconds - props.elapsedSeconds - initialSeconds\n    const date = moment()\n        .startOf('day')\n        .seconds(seconds)\n\n    return (\n        <div className=\"indicator-countdown\">\n            <div>\n                <div className={seconds > 0 ? 'caption' : 'caption big'}>\n                    Popcorn ready <span>in</span>\n                </div>\n                <div className={seconds > 0 ? 'time' : 'time hidden'}>\n                    {getText(date)}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nclass Countdown extends Component {\n\n    state = {\n        elapsedSeconds: 0,\n        progress: initialProgress\n    }\n\n    handleTimer = elapsedSeconds => {\n        const progress = this.roundProgress(\n            ((elapsedSeconds + initialSeconds) / totalSeconds) * 100\n        )\n        this.setState({\n            progress,\n            elapsedSeconds\n        })\n    }\n\n    roundProgress = progress => {\n        const factor = Math.pow(10, 2)\n        return Math.round(progress * factor) / factor\n    }\n\n    render = () => {\n        const { progress, elapsedSeconds } = this.state\n\n        return (\n            <div className=\"item\">\n                <div className=\"title\">\n                    <span>Countdown</span>\n                    <a\n                        href=\"https://github.com/martyan/react-customizable-progressbar/blob/master/examples/Countdown.js\"\n                        target=\"_blank\"\n                    >\n                        code <i className=\"fa fa-external-link-square\" />\n                    </a>\n                </div>\n\n                <div className=\"countdown\">\n                    <ProgressBar\n                        radius={100}\n                        progress={progress}\n                        strokeWidth={3}\n                        strokeColor=\"indianred\"\n                        trackStrokeWidth={3}\n                        trackStrokeColor=\"#e6e6e6\"\n                        pointerRadius={5}\n                        pointerFill=\"white\"\n                        pointerStrokeWidth={2}\n                        pointerStrokeColor=\"indianred\"\n                    >\n                        <Indicator\n                            progress={progress}\n                            elapsedSeconds={elapsedSeconds}\n                        />\n                    </ProgressBar>\n\n                    <Timer\n                        initialSeconds={initialSeconds}\n                        totalSeconds={totalSeconds}\n                        onChange={this.handleTimer}\n                        interval={1000}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Countdown\n","import React, { Component } from 'react'\nimport Basic from './Basic'\nimport CounterClockwise from './CounterClockwise'\nimport Cut from './Cut'\nimport WithPointer from './WithPointer'\nimport InverseProgress from './InverseProgress'\nimport CustomIndicator from './CustomIndicator'\nimport Countdown from './Countdown'\nimport './Examples.scss'\n\nclass Examples extends Component {\n\n    state = {\n        progress: 64\n    }\n\n    render = () => {\n        const { progress } = this.state\n\n        return (\n            <div className=\"examples\">\n                <div className=\"slider\">\n                    <div className=\"desc\">Progress</div>\n                    <input\n                        type=\"range\"\n                        value={progress}\n                        onChange={e =>\n                            this.setState({\n                                progress: parseInt(e.target.value, 10)\n                            })\n                        }\n                        min={0}\n                        max={100}\n                    />\n                </div>\n\n                <div className=\"list\">\n                    <Basic progress={progress} />\n                    <CounterClockwise progress={progress} />\n                    <Cut progress={progress} />\n                    <WithPointer progress={progress} />\n                    <InverseProgress progress={progress} />\n                    <CustomIndicator progress={progress} />\n                    <Countdown progress={progress} />\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Examples\n","import React from 'react'\nimport ReactGA from 'react-ga'\nimport Examples from '../../components/Examples/Examples'\n\nimport SEO from '../../components/seo'\n\nimport './index.scss'\n\n\nconst RCP = () => (\n    <div className=\"rcp-examples\">\n\n        <SEO title=\"Examples of react-customizable-progressbar\" keywords={[`react`, `circular`, `radial`, `progress`, `bar`, `component`, `examples`]} />\n\n        <div className=\"header\">\n            <p>Example usage of{' '}\n                <a\n                    href=\"https://github.com/martyan/react-customizable-progressbar\"\n                    target=\"_blank\"\n                    onClick={() => ReactGA.event({category: 'User', action: 'Clicked on react-customizable-progressbar'})}\n                >react-customizable-progressbar</a>\n            </p>\n            <p>Try{' '}\n                <a\n                    href=\"/react-customizable-progressbar/generator\"\n                    onClick={() => ReactGA.event({category: 'User', action: 'Clicked on react-customizable-progressbar generator'})}\n                >generator</a>{' '}\n                and check what it can do\n            </p>\n        </div>\n\n        <Examples />\n\n    </div>\n)\n\nexport default RCP\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n    return (\n        <StaticQuery\n            query={detailsQuery}\n            render={data => {\n                const metaDescription =\n                    description || ''\n                return (\n                    <Helmet\n                        htmlAttributes={{\n                            lang,\n                        }}\n                        title={title}\n                        titleTemplate={`%s`}\n                        meta={[\n                            {\n                                name: `description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:title`,\n                                content: title,\n                            },\n                            {\n                                property: `og:description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:type`,\n                                content: `website`,\n                            },\n                            {\n                                name: `twitter:card`,\n                                content: `summary`,\n                            },\n                            {\n                                name: `twitter:creator`,\n                                content: data.site.siteMetadata.author,\n                            },\n                            {\n                                name: `twitter:title`,\n                                content: title,\n                            },\n                            {\n                                name: `twitter:description`,\n                                content: metaDescription,\n                            },\n                        ]\n                            .concat(\n                                keywords.length > 0\n                                    ? {\n                                          name: `keywords`,\n                                          content: keywords.join(`, `),\n                                      }\n                                    : []\n                            )\n                            .concat(meta)}\n                    />\n                )\n            }}\n        />\n    )\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n}\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}