{"version":3,"sources":["webpack:///./src/components/Generator/LinecapSelector.js","webpack:///./src/components/Generator/ColorSelector.js","webpack:///./src/components/Generator/Controls.js","webpack:///./src/components/Generator/ImplementationCode.js","webpack:///./src/components/Generator/predefinedStates.js","webpack:///./src/components/Generator/index.js","webpack:///./src/pages/react-customizable-progressbar/generator.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["square_img","react_default","a","createElement","viewBox","className","x","y","width","height","round_img","d","butt_img","LinecapSelector","_ref","onChange","value","onClick","propTypes","PropTypes","func","isRequired","string","ColorSelector","pickerVisible","window","Observable","fromEvent","filter","_this","state","subscribe","handleClick","e","target","wrapper","contains","setState","_this$props","props","ref","elem","style","background","lib","color","hex","Component","mainGroup","name","label","type","min","unit","max","progressGroup","condition","strokeWidth","trackGroup","trackStrokeWidth","cut","pointerGroup","pointerRadius","pointerStrokeWidth","groups","main","progress","track","pointer","getChangeFn","input","handleChange","handleNumberChange","handleCheckboxChange","getMinMaxValue","getControl","control","hasOwnProperty","isModified","defaultState","key","components_Generator_ColorSelector","checked","components_Generator_LinecapSelector","getControlInput","Controls","renderTitle","map","radius","number","steps","rotate","strokeColor","fillColor","strokeLinecap","transition","pointerStrokeColor","pointerFillColor","trackStrokeColor","trackStrokeLinecap","trackTransition","initialAnimation","bool","initialAnimationDelay","inverse","counterClockwise","object","ImplementationCode","propName","codeVisible","toggleCode","group","code","i","forEach","renderGroup","react_prism_lib_default","component","renderButton","renderCode","example1State","objectSpread_default","example2State","example3State","example4State","example5State","Indicator","display","alignItems","justifyContent","textAlign","position","top","margin","fontSize","Index","ProgressBar","__webpack_require__","then","t","bind","default","catch","console","log","_this$setState","_this$setState2","parseInt","_this$setState3","Object","assign","Generator_Indicator","fontWeight","_this$state","handlers","renderThumb","components_Generator_ImplementationCode","components_Generator_Controls","React","RCP","seo","title","keywords","href","ReactGA","event","category","action","components_Generator","m","module","exports","require","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","render","children","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","site","siteMetadata","author","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","json","shape"],"mappings":"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","file":"component---src-pages-react-customizable-progressbar-generator-js-fb5743c1b7428052035b.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './LinecapSelector.scss'\n\nconst square_img = (\n    <svg viewBox=\"0 0 18 18\">\n        <g>\n            <rect className=\"fill\" x=\"0\" y=\"0\" width=\"18\" height=\"18\" />\n            <rect className=\"stroke\" x=\"6.8\" y=\"6.8\" width=\"4.5\" height=\"4.5\" />\n            <rect className=\"stroke\" x=\"8.1\" y=\"8.3\" width=\"9.9\" height=\"1.5\" />\n        </g>\n    </svg>\n)\nconst round_img = (\n    <svg viewBox=\"0 0 18 18\">\n        <g>\n            <path\n                className=\"fill\"\n                d=\"M8.1,18C3.6,18,0,14.4,0,9.9V8.1C0,3.6,3.6,0,8.1,0H18v18H8.1z\"\n            />\n            <rect className=\"stroke\" x=\"6.8\" y=\"6.8\" width=\"4.5\" height=\"4.5\" />\n            <rect className=\"stroke\" x=\"8.1\" y=\"8.2\" width=\"9.9\" height=\"1.5\" />\n        </g>\n    </svg>\n)\nconst butt_img = (\n    <svg viewBox=\"0 0 18 18\">\n        <g>\n            <rect x=\"2.2\" className=\"fill\" width=\"15.8\" height=\"18\" />\n            <rect className=\"stroke\" y=\"6.8\" width=\"4.5\" height=\"4.5\" />\n            <rect\n                className=\"stroke\"\n                x=\"1.3\"\n                y=\"8.2\"\n                width=\"16.7\"\n                height=\"1.5\"\n            />\n        </g>\n    </svg>\n)\n\nconst LinecapSelector = ({ onChange, value }) => (\n    <div className=\"linecap-selector\">\n        <div\n            className={value === 'square' ? 'option selected' : 'option'}\n            onClick={() => onChange('square')}\n        >\n            {square_img}\n        </div>\n        <div\n            className={value === 'round' ? 'option selected' : 'option'}\n            onClick={() => onChange('round')}\n        >\n            {round_img}\n        </div>\n        <div\n            className={value === 'butt' ? 'option selected' : 'option'}\n            onClick={() => onChange('butt')}\n        >\n            {butt_img}\n        </div>\n    </div>\n)\n\nLinecapSelector.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired\n}\n\nexport default LinecapSelector\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Observable } from 'rxjs'\nimport { ChromePicker } from 'react-color'\nimport './ColorSelector.scss'\n\nclass ColorSelector extends Component {\n    state = {\n        pickerVisible: false\n    }\n\n    componentDidMount = () => {\n        if(typeof window !== 'undefined') {\n            Observable.fromEvent(window, 'click')\n                .filter(() => this.state.pickerVisible)\n                .subscribe(this.handleClick)\n        }\n    }\n\n    handleClick = e => {\n        if (e.target !== this.wrapper && !this.wrapper.contains(e.target)) {\n            this.setState({ pickerVisible: false })\n        }\n    }\n\n    render = () => {\n        const { value, onChange } = this.props\n        const { pickerVisible } = this.state\n\n        return (\n            <div className=\"color-selector\" ref={elem => (this.wrapper = elem)}>\n                <div\n                    className=\"color\"\n                    style={{ background: value }}\n                    onClick={() =>\n                        this.setState({ pickerVisible: !pickerVisible })\n                    }\n                />\n                {pickerVisible && (\n                    <ChromePicker\n                        color={value}\n                        onChange={color => onChange(color.hex)}\n                    />\n                )}\n            </div>\n        )\n    }\n}\n\nColorSelector.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired\n}\n\nexport default ColorSelector\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport LinecapSelector from './LinecapSelector'\nimport ColorSelector from './ColorSelector'\nimport './Controls.scss'\n\nexport const mainGroup = [\n    {\n        name: 'radius',\n        label: 'Radius',\n        type: 'number',\n        min: 0,\n        unit: 'px'\n    },\n    {\n        name: 'progress',\n        label: 'Progress',\n        type: 'number',\n        min: 0,\n        max: 'steps'\n    },\n    {\n        name: 'steps',\n        label: 'Steps',\n        type: 'number',\n        min: 'progress'\n    },\n    {\n        name: 'cut',\n        label: 'Cut',\n        type: 'number',\n        min: 0,\n        max: 360,\n        unit: 'deg'\n    },\n    {\n        name: 'rotate',\n        label: 'Rotate',\n        type: 'number',\n        unit: 'deg'\n    },\n    {\n        name: 'fillColor',\n        label: 'Fill color',\n        type: 'color'\n    },\n    {\n        name: 'counterClockwise',\n        label: 'Counter-clockwise',\n        type: 'checkbox'\n    },\n    {\n        name: 'inverse',\n        label: 'Inverse',\n        type: 'checkbox'\n    },\n    {\n        name: 'initialAnimation',\n        label: 'Initial animation',\n        type: 'checkbox'\n    },\n    {\n        name: 'initialAnimationDelay',\n        label: 'Initial animation delay',\n        type: 'number',\n        min: 0,\n        unit: 'ms'\n    }\n]\n\nexport const progressGroup = [\n    {\n        name: 'strokeWidth',\n        label: 'Stroke width',\n        type: 'number',\n        min: 0,\n        unit: 'px'\n    },\n    {\n        name: 'strokeColor',\n        label: 'Stroke color',\n        type: 'color',\n        condition: props => props.strokeWidth > 0\n    },\n    {\n        name: 'transition',\n        label: 'Stroke transition',\n        type: 'text',\n        condition: props => props.strokeWidth > 0\n    },\n    {\n        name: 'strokeLinecap',\n        label: 'Stroke linecap',\n        type: 'linecap',\n        condition: props => props.strokeWidth > 0\n    }\n]\n\nexport const trackGroup = [\n    {\n        name: 'trackStrokeWidth',\n        label: 'Stroke width',\n        type: 'number',\n        min: 0,\n        unit: 'px'\n    },\n    {\n        name: 'trackStrokeColor',\n        label: 'Stroke color',\n        type: 'color',\n        condition: props => props.trackStrokeWidth > 0\n    },\n    {\n        name: 'trackTransition',\n        label: 'Stroke transition',\n        type: 'text',\n        condition: props => props.trackStrokeWidth > 0\n    },\n    {\n        name: 'trackStrokeLinecap',\n        label: 'Stroke linecap',\n        type: 'linecap',\n        condition: props => props.trackStrokeWidth > 0 && props.cut > 0\n    }\n]\n\nexport const pointerGroup = [\n    {\n        name: 'pointerRadius',\n        label: 'Radius',\n        type: 'number',\n        min: 0,\n        unit: 'px'\n    },\n    {\n        name: 'pointerStrokeWidth',\n        label: 'Stroke width',\n        type: 'number',\n        min: 0,\n        unit: 'px',\n        condition: props => props.pointerRadius > 0\n    },\n    {\n        name: 'pointerStrokeColor',\n        label: 'Stroke color',\n        type: 'color',\n        condition: props =>\n            props.pointerRadius > 0 && props.pointerStrokeWidth > 0\n    },\n    {\n        name: 'pointerFillColor',\n        label: 'Fill color',\n        type: 'color',\n        condition: props =>\n            props.pointerRadius > 0 && props.pointerStrokeWidth > 0\n    }\n]\n\nconst groups = {\n    main: mainGroup,\n    progress: progressGroup,\n    track: trackGroup,\n    pointer: pointerGroup\n}\n\nconst getChangeFn = (input, props) => {\n    switch (input.type) {\n        case 'color':\n        case 'linecap':\n            return value => props.handleChange(input.name, value)\n        case 'text':\n            return e => props.handleChange(input.name, e.target.value)\n        case 'number':\n            return e => props.handleNumberChange(input.name, e)\n        case 'checkbox':\n            return e => props.handleCheckboxChange(input.name, e)\n    }\n}\n\nconst getMinMaxValue = (value, props) => {\n    if (typeof value === 'string') return props[value]\n    return value\n}\n\nconst getControlInput = (control, props) => {\n    switch (control.type) {\n        case 'number':\n            return (\n                <input\n                    type={control.type}\n                    value={props[control.name]}\n                    onChange={getChangeFn(control, props)}\n                    min={\n                        control.hasOwnProperty('min')\n                            ? getMinMaxValue(control.min, props)\n                            : null\n                    }\n                    max={\n                        control.hasOwnProperty('max')\n                            ? getMinMaxValue(control.max, props)\n                            : null\n                    }\n                />\n            )\n\n        case 'color':\n            return (\n                <ColorSelector\n                    value={props[control.name]}\n                    onChange={getChangeFn(control, props)}\n                />\n            )\n\n        case 'checkbox':\n            return (\n                <input\n                    type={control.type}\n                    checked={props[control.name]}\n                    onChange={getChangeFn(control, props)}\n                />\n            )\n\n        case 'text':\n            return (\n                <input\n                    type={control.type}\n                    value={props[control.name]}\n                    onChange={getChangeFn(control, props)}\n                />\n            )\n\n        case 'linecap':\n            return (\n                <LinecapSelector\n                    value={props[control.name]}\n                    onChange={getChangeFn(control, props)}\n                />\n            )\n    }\n}\n\nconst getControl = (control, props) => {\n    if (control.hasOwnProperty('condition') && !control.condition(props))\n        return null\n\n    const isModified = props.defaultState[control.name] !== props[control.name]\n\n    return (\n        <label key={control.name}>\n            <span className={isModified ? 'caption modified' : 'caption'}>\n                {control.label}\n            </span>\n            {getControlInput(control, props)}\n            {control.hasOwnProperty('unit') && (\n                <span className=\"unit\">{control.unit}</span>\n            )}\n        </label>\n    )\n}\n\nconst renderTitle = props => {\n    if (props.type === 'main') return null\n    if (props.type === 'progress')\n        return <div className=\"title\">Progress style</div>\n    if (props.type === 'track') return <div className=\"title\">Track style</div>\n    if (props.type === 'pointer')\n        return <div className=\"title\">Pointer style</div>\n}\n\nconst Controls = props => {\n    return (\n        <div className=\"controls\">\n            {renderTitle(props)}\n            {groups[props.type].map(control => getControl(control, props))}\n        </div>\n    )\n}\n\nControls.propTypes = {\n    radius: PropTypes.number.isRequired,\n    progress: PropTypes.number.isRequired,\n    steps: PropTypes.number.isRequired,\n    cut: PropTypes.number.isRequired,\n    rotate: PropTypes.number.isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    strokeColor: PropTypes.string.isRequired,\n    fillColor: PropTypes.string.isRequired,\n    strokeLinecap: PropTypes.string.isRequired,\n    transition: PropTypes.string.isRequired,\n    pointerRadius: PropTypes.number.isRequired,\n    pointerStrokeWidth: PropTypes.number.isRequired,\n    pointerStrokeColor: PropTypes.string.isRequired,\n    pointerFillColor: PropTypes.string.isRequired,\n    trackStrokeWidth: PropTypes.number.isRequired,\n    trackStrokeColor: PropTypes.string.isRequired,\n    trackStrokeLinecap: PropTypes.string.isRequired,\n    trackTransition: PropTypes.string.isRequired,\n    initialAnimation: PropTypes.bool.isRequired,\n    initialAnimationDelay: PropTypes.number.isRequired,\n    inverse: PropTypes.bool.isRequired,\n    counterClockwise: PropTypes.bool.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    handleNumberChange: PropTypes.func.isRequired,\n    handleCheckboxChange: PropTypes.func.isRequired,\n    defaultState: PropTypes.object.isRequired,\n    type: PropTypes.string.isRequired\n}\n\nexport default Controls\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport PrismCode from 'react-prism'\nimport prismjs from 'prismjs'\nimport { mainGroup, progressGroup, trackGroup, pointerGroup } from './Controls'\nimport 'prismjs/themes/prism.css'\nimport './ImplementationCode.scss'\n\nclass ImplementationCode extends Component {\n    isModified = propName => {\n        return this.props.defaultState[propName] !== this.props[propName]\n    }\n\n    renderButton = () => {\n        const { codeVisible, toggleCode } = this.props\n\n        return (\n            <div className=\"btns\">\n                <button onClick={() => toggleCode(!codeVisible)}>\n                    {!codeVisible ? 'Show code' : 'Show progress bar'}\n                </button>\n            </div>\n        )\n    }\n\n    renderGroup = (group, condition) => {\n        let code = ``\n        group\n            .filter((control, i) => (condition ? condition(i) : true))\n            .forEach(control => {\n                if (this.isModified(control.name)) {\n                    switch (control.type) {\n                        case 'text':\n                        case 'linecap':\n                        case 'color':\n                            code += `    ${control.name}=\"${\n                                this.props[control.name]\n                            }\"\\n`\n                            break\n                        case 'checkbox':\n                            code += `    ${control.name}\\n`\n                            break\n                        default:\n                            code += `    ${control.name}={${\n                                this.props[control.name]\n                            }}\\n`\n                            break\n                    }\n                }\n            })\n        return code\n    }\n\n    renderCode = () => {\n        let code = `import ProgressBar from 'react-customizable-progressbar'\\n\\n`\n        code += `<ProgressBar\\n`\n        code += `    radius={${this.props.radius}}\\n`\n        code += `    progress={${this.props.progress}}\\n`\n\n        code += this.renderGroup(mainGroup, i => i > 1)\n        code += this.renderGroup(progressGroup)\n        code += this.renderGroup(trackGroup)\n        code += this.renderGroup(pointerGroup)\n\n        code += `/>`\n\n        return (\n            <PrismCode component=\"pre\" className=\"language-markup\">\n                {code}\n            </PrismCode>\n        )\n    }\n\n    render = () => {\n        const { codeVisible } = this.props\n\n        return (\n            <div className=\"implementation-code\">\n                {this.renderButton()}\n                {codeVisible && this.renderCode()}\n            </div>\n        )\n    }\n}\n\nImplementationCode.propTypes = {\n    codeVisible: PropTypes.bool.isRequired,\n    toggleCode: PropTypes.func.isRequired\n}\n\nexport default ImplementationCode\n","export const defaultState = {\n    radius: 100,\n    progress: 66,\n    steps: 100,\n    cut: 0,\n    rotate: -90,\n    strokeWidth: 20,\n    strokeColor: 'indianred',\n    fillColor: 'none',\n    strokeLinecap: 'round',\n    transition: '.3s ease',\n    pointerRadius: 0,\n    pointerStrokeWidth: 20,\n    pointerStrokeColor: 'indianred',\n    pointerFillColor: 'white',\n    trackStrokeColor: '#e6e6e6',\n    trackStrokeWidth: 20,\n    trackStrokeLinecap: 'round',\n    trackTransition: '.3s ease',\n    counterClockwise: false,\n    inverse: false,\n    initialAnimation: false,\n    initialAnimationDelay: 0,\n    className: null\n}\n\nexport const example1State = {\n    ...defaultState,\n    strokeWidth: 18,\n    strokeColor: '#5d9cec',\n    strokeLinecap: 'square',\n    trackStrokeWidth: 18\n}\n\nexport const example2State = {\n    ...defaultState,\n    strokeWidth: 18,\n    strokeColor: '#a0d468',\n    strokeLinecap: 'round',\n    trackStrokeWidth: 18,\n    counterClockwise: true\n}\n\nexport const example3State = {\n    ...defaultState,\n    strokeWidth: 28,\n    strokeColor: '#ffce54',\n    strokeLinecap: 'butt',\n    trackStrokeWidth: 14,\n    trackStrokeLinecap: 'butt',\n    cut: 120,\n    rotate: -210\n}\n\nexport const example4State = {\n    ...defaultState,\n    strokeWidth: 4,\n    strokeColor: 'indianred',\n    trackStrokeWidth: 4,\n    pointerRadius: 8,\n    pointerStrokeWidth: 5,\n    pointerStrokeColor: 'indianred'\n}\n\nexport const example5State = {\n    ...defaultState,\n    fillColor: '#f2f2f2',\n    strokeWidth: 2,\n    strokeColor: '#656d78',\n    trackStrokeWidth: 2,\n    pointerRadius: 12,\n    pointerStrokeWidth: 2,\n    pointerStrokeColor: '#656d78',\n    inverse: true\n}\n","import React from 'react'\nimport Controls from './Controls'\nimport ImplementationCode from './ImplementationCode'\nimport {\n    defaultState,\n    example1State,\n    example2State,\n    example3State,\n    example4State,\n    example5State\n} from './predefinedStates'\nimport './index.scss'\n\nconst Indicator = props => {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                textAlign: 'center',\n                position: 'absolute',\n                top: '0',\n                width: '100%',\n                height: '100%',\n                margin: '0 auto',\n                color: 'black',\n                fontSize: '1.3em',\n                ...props.style\n            }}\n        >\n            <div style={{ fontSize: '1.3em' }}>\n                {props.progress}/{props.steps}\n            </div>\n        </div>\n    )\n}\n\nclass Index extends React.Component {\n\n    state = {\n        ...defaultState,\n        codeVisible: false,\n        ProgressBar: null\n    }\n\n    componentDidMount = () => {\n        import('react-customizable-progressbar')\n            .then(({ default: ProgressBar }) => this.setState({ProgressBar}))\n            .catch(console.log)\n    }\n\n    handleChange = (key, value) => {\n        this.setState({ [key]: value })\n    }\n\n    handleNumberChange = (key, e) => {\n        this.setState({ [key]: parseInt(e.target.value) })\n    }\n\n    handleCheckboxChange = (key, e) => {\n        this.setState({ [key]: e.target.checked === true })\n    }\n\n    renderThumb = (state) => {\n        if(!state.ProgressBar) return null\n\n        const ProgressBar = state.ProgressBar\n\n        return (\n            <div onClick={() => this.setState({ ...state })} className=\"thumb\">\n                <ProgressBar\n                    {...state}\n                    radius={50}\n                    strokeWidth={state.strokeWidth / 2}\n                    trackStrokeWidth={state.trackStrokeWidth / 2}\n                    pointerRadius={state.pointerRadius / 2}\n                    pointerStrokeWidth={state.pointerStrokeWidth / 2}\n                >\n                    <Indicator\n                        progress={state.progress}\n                        steps={state.steps}\n                        style={{\n                            fontSize: '.7em',\n                            color: '#aaa',\n                            fontWeight: '100'\n                        }}\n                    />\n                </ProgressBar>\n            </div>\n        )\n    }\n\n    render = () => {\n        const { codeVisible, ProgressBar } = this.state\n\n        if(!ProgressBar) return null\n\n        const handlers = {\n            handleChange: this.handleChange,\n            handleNumberChange: this.handleNumberChange,\n            handleCheckboxChange: this.handleCheckboxChange\n        }\n\n        return (\n            <div className=\"generator\">\n                <div className=\"thumbs\">\n                    {this.renderThumb(defaultState)}\n                    {this.renderThumb(example1State)}\n                    {this.renderThumb(example2State)}\n                    {this.renderThumb(example3State)}\n                    {this.renderThumb(example4State)}\n                    {this.renderThumb(example5State)}\n                </div>\n\n                <div className=\"bar-controls\">\n                    <div className=\"bar\">\n                        <ImplementationCode\n                            {...this.state}\n                            defaultState={defaultState}\n                            toggleCode={codeVisible =>\n                                this.setState({ codeVisible })\n                            }\n                        />\n                        {!codeVisible && (\n                            <ProgressBar\n                                {...this.state}\n                                className=\"progressbar\"\n                            >\n                                <Indicator\n                                    progress={this.state.progress}\n                                    steps={this.state.steps}\n                                />\n                            </ProgressBar>\n                        )}\n                    </div>\n                    <Controls\n                        {...this.state}\n                        {...handlers}\n                        type=\"main\"\n                        defaultState={defaultState}\n                    />\n                </div>\n\n                <div className=\"style-controls\">\n                    <Controls\n                        {...this.state}\n                        {...handlers}\n                        type=\"progress\"\n                        defaultState={defaultState}\n                    />\n                    <Controls\n                        {...this.state}\n                        {...handlers}\n                        type=\"track\"\n                        defaultState={defaultState}\n                    />\n                    <Controls\n                        {...this.state}\n                        {...handlers}\n                        type=\"pointer\"\n                        defaultState={defaultState}\n                    />\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Index\n","import React from 'react'\nimport ReactGA from 'react-ga'\nimport Generator from '../../components/Generator'\n\nimport SEO from '../../components/seo'\n\nimport './generator.scss'\n\n\nconst RCP = () => (\n    <div className=\"rcp-generator\">\n\n        <SEO title=\"Playground / generator of react-customizable-progressbar\" keywords={[`react`, `circular`, `radial`, `progress`, `bar`, `component`, `generator`, `playground`]} />\n\n        <div className=\"header\">\n            <p>Generator of {' '}\n                <a\n                    href=\"https://github.com/martyan/react-customizable-progressbar\"\n                    target=\"_blank\"\n                    onClick={() => ReactGA.event({category: 'User', action: 'Clicked on react-customizable-progressbar'})}\n                >react-customizable-progressbar</a>\n            </p>\n            <p>See{' '}\n                <a\n                    href=\"/react-customizable-progressbar\"\n                    onClick={() => ReactGA.event({category: 'User', action: 'Clicked on react-customizable-progressbar examples'})}\n                >examples</a>\n            </p>\n        </div>\n\n        <Generator />\n\n    </div>\n)\n\nexport default RCP\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n    return (\n        <StaticQuery\n            query={detailsQuery}\n            render={data => {\n                const metaDescription =\n                    description || ''\n                return (\n                    <Helmet\n                        htmlAttributes={{\n                            lang,\n                        }}\n                        title={title}\n                        titleTemplate={`%s`}\n                        meta={[\n                            {\n                                name: `description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:title`,\n                                content: title,\n                            },\n                            {\n                                property: `og:description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:type`,\n                                content: `website`,\n                            },\n                            {\n                                name: `twitter:card`,\n                                content: `summary`,\n                            },\n                            {\n                                name: `twitter:creator`,\n                                content: data.site.siteMetadata.author,\n                            },\n                            {\n                                name: `twitter:title`,\n                                content: title,\n                            },\n                            {\n                                name: `twitter:description`,\n                                content: metaDescription,\n                            },\n                        ]\n                            .concat(\n                                keywords.length > 0\n                                    ? {\n                                          name: `keywords`,\n                                          content: keywords.join(`, `),\n                                      }\n                                    : []\n                            )\n                            .concat(meta)}\n                    />\n                )\n            }}\n        />\n    )\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n}\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}