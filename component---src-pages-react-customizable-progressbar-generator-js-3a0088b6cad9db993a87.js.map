{"version":3,"sources":["webpack:///./src/components/Generator/LinecapSelector.js","webpack:///./src/components/Generator/ColorSelector.js","webpack:///./src/components/Generator/Controls.js","webpack:///./src/components/Generator/ImplementationCode.js","webpack:///./src/components/Generator/predefinedStates.js","webpack:///./src/components/Generator/index.js","webpack:///./src/pages/react-customizable-progressbar/generator.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["square_img","react_default","a","createElement","viewBox","className","x","y","width","height","round_img","d","butt_img","LinecapSelector","_ref","onChange","value","onClick","propTypes","PropTypes","func","isRequired","string","ColorSelector","state","pickerVisible","componentDidMount","window","Observable","fromEvent","filter","_this","subscribe","handleClick","e","target","wrapper","contains","setState","render","_this$props","props","ref","elem","style","background","lib","color","hex","Component","mainGroup","name","label","type","min","unit","max","progressGroup","condition","strokeWidth","trackGroup","trackStrokeWidth","cut","pointerGroup","pointerRadius","pointerStrokeWidth","groups","main","progress","track","pointer","getChangeFn","input","handleChange","handleNumberChange","handleCheckboxChange","getMinMaxValue","getControl","control","hasOwnProperty","isModified","defaultState","key","components_Generator_ColorSelector","checked","components_Generator_LinecapSelector","getControlInput","Controls","renderTitle","map","radius","number","steps","rotate","strokeColor","fillColor","strokeLinecap","transition","pointerStrokeColor","pointerFillColor","trackStrokeColor","trackStrokeLinecap","trackTransition","initialAnimation","bool","initialAnimationDelay","inverse","counterClockwise","object","ImplementationCode","propName","renderButton","codeVisible","toggleCode","renderGroup","group","code","i","forEach","renderCode","react_prism_lib_default","component","example1State","Object","assign","example2State","example3State","example4State","example5State","Indicator","display","alignItems","justifyContent","textAlign","position","top","margin","fontSize","Index","_this$setState","_this$setState2","parseInt","_this$setState3","renderThumb","ReactCustomizableProgressbar_default","Generator_Indicator","fontWeight","handlers","components_Generator_ImplementationCode","components_Generator_Controls","React","RCP","seo","title","keywords","href","ReactGA","event","category","action","components_Generator","m","module","exports","require","default","__webpack_require__","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","children","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape"],"mappings":"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","file":"component---src-pages-react-customizable-progressbar-generator-js-3a0088b6cad9db993a87.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport './LinecapSelector.scss'\n\nconst square_img = (\n    <svg viewBox=\"0 0 18 18\">\n        <g>\n            <rect className=\"fill\" x=\"0\" y=\"0\" width=\"18\" height=\"18\" />\n            <rect className=\"stroke\" x=\"6.8\" y=\"6.8\" width=\"4.5\" height=\"4.5\" />\n            <rect className=\"stroke\" x=\"8.1\" y=\"8.3\" width=\"9.9\" height=\"1.5\" />\n        </g>\n    </svg>\n)\nconst round_img = (\n    <svg viewBox=\"0 0 18 18\">\n        <g>\n            <path\n                className=\"fill\"\n                d=\"M8.1,18C3.6,18,0,14.4,0,9.9V8.1C0,3.6,3.6,0,8.1,0H18v18H8.1z\"\n            />\n            <rect className=\"stroke\" x=\"6.8\" y=\"6.8\" width=\"4.5\" height=\"4.5\" />\n            <rect className=\"stroke\" x=\"8.1\" y=\"8.2\" width=\"9.9\" height=\"1.5\" />\n        </g>\n    </svg>\n)\nconst butt_img = (\n    <svg viewBox=\"0 0 18 18\">\n        <g>\n            <rect x=\"2.2\" className=\"fill\" width=\"15.8\" height=\"18\" />\n            <rect className=\"stroke\" y=\"6.8\" width=\"4.5\" height=\"4.5\" />\n            <rect\n                className=\"stroke\"\n                x=\"1.3\"\n                y=\"8.2\"\n                width=\"16.7\"\n                height=\"1.5\"\n            />\n        </g>\n    </svg>\n)\n\nconst LinecapSelector = ({ onChange, value }) => (\n    <div className=\"linecap-selector\">\n        <div\n            className={value === 'square' ? 'option selected' : 'option'}\n            onClick={() => onChange('square')}\n        >\n            {square_img}\n        </div>\n        <div\n            className={value === 'round' ? 'option selected' : 'option'}\n            onClick={() => onChange('round')}\n        >\n            {round_img}\n        </div>\n        <div\n            className={value === 'butt' ? 'option selected' : 'option'}\n            onClick={() => onChange('butt')}\n        >\n            {butt_img}\n        </div>\n    </div>\n)\n\nLinecapSelector.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired\n}\n\nexport default LinecapSelector\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Observable } from 'rxjs'\nimport { ChromePicker } from 'react-color'\nimport './ColorSelector.scss'\n\nclass ColorSelector extends Component {\n    state = {\n        pickerVisible: false\n    }\n\n    componentDidMount = () => {\n        if(typeof window !== 'undefined') {\n            Observable.fromEvent(window, 'click')\n                .filter(() => this.state.pickerVisible)\n                .subscribe(this.handleClick)\n        }\n    }\n\n    handleClick = e => {\n        if (e.target !== this.wrapper && !this.wrapper.contains(e.target)) {\n            this.setState({ pickerVisible: false })\n        }\n    }\n\n    render = () => {\n        const { value, onChange } = this.props\n        const { pickerVisible } = this.state\n\n        return (\n            <div className=\"color-selector\" ref={elem => (this.wrapper = elem)}>\n                <div\n                    className=\"color\"\n                    style={{ background: value }}\n                    onClick={() =>\n                        this.setState({ pickerVisible: !pickerVisible })\n                    }\n                />\n                {pickerVisible && (\n                    <ChromePicker\n                        color={value}\n                        onChange={color => onChange(color.hex)}\n                    />\n                )}\n            </div>\n        )\n    }\n}\n\nColorSelector.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    value: PropTypes.string.isRequired\n}\n\nexport default ColorSelector\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport LinecapSelector from './LinecapSelector'\nimport ColorSelector from './ColorSelector'\nimport './Controls.scss'\n\nexport const mainGroup = [\n    {\n        name: 'radius',\n        label: 'Radius',\n        type: 'number',\n        min: 0,\n        unit: 'px'\n    },\n    {\n        name: 'progress',\n        label: 'Progress',\n        type: 'number',\n        min: 0,\n        max: 'steps'\n    },\n    {\n        name: 'steps',\n        label: 'Steps',\n        type: 'number',\n        min: 'progress'\n    },\n    {\n        name: 'cut',\n        label: 'Cut',\n        type: 'number',\n        min: 0,\n        max: 360,\n        unit: 'deg'\n    },\n    {\n        name: 'rotate',\n        label: 'Rotate',\n        type: 'number',\n        unit: 'deg'\n    },\n    {\n        name: 'fillColor',\n        label: 'Fill color',\n        type: 'color'\n    },\n    {\n        name: 'counterClockwise',\n        label: 'Counter-clockwise',\n        type: 'checkbox'\n    },\n    {\n        name: 'inverse',\n        label: 'Inverse',\n        type: 'checkbox'\n    },\n    {\n        name: 'initialAnimation',\n        label: 'Initial animation',\n        type: 'checkbox'\n    },\n    {\n        name: 'initialAnimationDelay',\n        label: 'Initial animation delay',\n        type: 'number',\n        min: 0,\n        unit: 'ms'\n    }\n]\n\nexport const progressGroup = [\n    {\n        name: 'strokeWidth',\n        label: 'Stroke width',\n        type: 'number',\n        min: 0,\n        unit: 'px'\n    },\n    {\n        name: 'strokeColor',\n        label: 'Stroke color',\n        type: 'color',\n        condition: props => props.strokeWidth > 0\n    },\n    {\n        name: 'transition',\n        label: 'Stroke transition',\n        type: 'text',\n        condition: props => props.strokeWidth > 0\n    },\n    {\n        name: 'strokeLinecap',\n        label: 'Stroke linecap',\n        type: 'linecap',\n        condition: props => props.strokeWidth > 0\n    }\n]\n\nexport const trackGroup = [\n    {\n        name: 'trackStrokeWidth',\n        label: 'Stroke width',\n        type: 'number',\n        min: 0,\n        unit: 'px'\n    },\n    {\n        name: 'trackStrokeColor',\n        label: 'Stroke color',\n        type: 'color',\n        condition: props => props.trackStrokeWidth > 0\n    },\n    {\n        name: 'trackTransition',\n        label: 'Stroke transition',\n        type: 'text',\n        condition: props => props.trackStrokeWidth > 0\n    },\n    {\n        name: 'trackStrokeLinecap',\n        label: 'Stroke linecap',\n        type: 'linecap',\n        condition: props => props.trackStrokeWidth > 0 && props.cut > 0\n    }\n]\n\nexport const pointerGroup = [\n    {\n        name: 'pointerRadius',\n        label: 'Radius',\n        type: 'number',\n        min: 0,\n        unit: 'px'\n    },\n    {\n        name: 'pointerStrokeWidth',\n        label: 'Stroke width',\n        type: 'number',\n        min: 0,\n        unit: 'px',\n        condition: props => props.pointerRadius > 0\n    },\n    {\n        name: 'pointerStrokeColor',\n        label: 'Stroke color',\n        type: 'color',\n        condition: props =>\n            props.pointerRadius > 0 && props.pointerStrokeWidth > 0\n    },\n    {\n        name: 'pointerFillColor',\n        label: 'Fill color',\n        type: 'color',\n        condition: props =>\n            props.pointerRadius > 0 && props.pointerStrokeWidth > 0\n    }\n]\n\nconst groups = {\n    main: mainGroup,\n    progress: progressGroup,\n    track: trackGroup,\n    pointer: pointerGroup\n}\n\nconst getChangeFn = (input, props) => {\n    switch (input.type) {\n        case 'color':\n        case 'linecap':\n            return value => props.handleChange(input.name, value)\n        case 'text':\n            return e => props.handleChange(input.name, e.target.value)\n        case 'number':\n            return e => props.handleNumberChange(input.name, e)\n        case 'checkbox':\n            return e => props.handleCheckboxChange(input.name, e)\n    }\n}\n\nconst getMinMaxValue = (value, props) => {\n    if (typeof value === 'string') return props[value]\n    return value\n}\n\nconst getControlInput = (control, props) => {\n    switch (control.type) {\n        case 'number':\n            return (\n                <input\n                    type={control.type}\n                    value={props[control.name]}\n                    onChange={getChangeFn(control, props)}\n                    min={\n                        control.hasOwnProperty('min')\n                            ? getMinMaxValue(control.min, props)\n                            : null\n                    }\n                    max={\n                        control.hasOwnProperty('max')\n                            ? getMinMaxValue(control.max, props)\n                            : null\n                    }\n                />\n            )\n\n        case 'color':\n            return (\n                <ColorSelector\n                    value={props[control.name]}\n                    onChange={getChangeFn(control, props)}\n                />\n            )\n\n        case 'checkbox':\n            return (\n                <input\n                    type={control.type}\n                    checked={props[control.name]}\n                    onChange={getChangeFn(control, props)}\n                />\n            )\n\n        case 'text':\n            return (\n                <input\n                    type={control.type}\n                    value={props[control.name]}\n                    onChange={getChangeFn(control, props)}\n                />\n            )\n\n        case 'linecap':\n            return (\n                <LinecapSelector\n                    value={props[control.name]}\n                    onChange={getChangeFn(control, props)}\n                />\n            )\n    }\n}\n\nconst getControl = (control, props) => {\n    if (control.hasOwnProperty('condition') && !control.condition(props))\n        return null\n\n    const isModified = props.defaultState[control.name] !== props[control.name]\n\n    return (\n        <label key={control.name}>\n            <span className={isModified ? 'caption modified' : 'caption'}>\n                {control.label}\n            </span>\n            {getControlInput(control, props)}\n            {control.hasOwnProperty('unit') && (\n                <span className=\"unit\">{control.unit}</span>\n            )}\n        </label>\n    )\n}\n\nconst renderTitle = props => {\n    if (props.type === 'main') return null\n    if (props.type === 'progress')\n        return <div className=\"title\">Progress style</div>\n    if (props.type === 'track') return <div className=\"title\">Track style</div>\n    if (props.type === 'pointer')\n        return <div className=\"title\">Pointer style</div>\n}\n\nconst Controls = props => {\n    return (\n        <div className=\"controls\">\n            {renderTitle(props)}\n            {groups[props.type].map(control => getControl(control, props))}\n        </div>\n    )\n}\n\nControls.propTypes = {\n    radius: PropTypes.number.isRequired,\n    progress: PropTypes.number.isRequired,\n    steps: PropTypes.number.isRequired,\n    cut: PropTypes.number.isRequired,\n    rotate: PropTypes.number.isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    strokeColor: PropTypes.string.isRequired,\n    fillColor: PropTypes.string.isRequired,\n    strokeLinecap: PropTypes.string.isRequired,\n    transition: PropTypes.string.isRequired,\n    pointerRadius: PropTypes.number.isRequired,\n    pointerStrokeWidth: PropTypes.number.isRequired,\n    pointerStrokeColor: PropTypes.string.isRequired,\n    pointerFillColor: PropTypes.string.isRequired,\n    trackStrokeWidth: PropTypes.number.isRequired,\n    trackStrokeColor: PropTypes.string.isRequired,\n    trackStrokeLinecap: PropTypes.string.isRequired,\n    trackTransition: PropTypes.string.isRequired,\n    initialAnimation: PropTypes.bool.isRequired,\n    initialAnimationDelay: PropTypes.number.isRequired,\n    inverse: PropTypes.bool.isRequired,\n    counterClockwise: PropTypes.bool.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    handleNumberChange: PropTypes.func.isRequired,\n    handleCheckboxChange: PropTypes.func.isRequired,\n    defaultState: PropTypes.object.isRequired,\n    type: PropTypes.string.isRequired\n}\n\nexport default Controls\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport PrismCode from 'react-prism'\nimport prismjs from 'prismjs'\nimport { mainGroup, progressGroup, trackGroup, pointerGroup } from './Controls'\nimport 'prismjs/themes/prism.css'\nimport './ImplementationCode.scss'\n\nclass ImplementationCode extends Component {\n    isModified = propName => {\n        return this.props.defaultState[propName] !== this.props[propName]\n    }\n\n    renderButton = () => {\n        const { codeVisible, toggleCode } = this.props\n\n        return (\n            <div className=\"btns\">\n                <button onClick={() => toggleCode(!codeVisible)}>\n                    {!codeVisible ? 'Show code' : 'Show progress bar'}\n                </button>\n            </div>\n        )\n    }\n\n    renderGroup = (group, condition) => {\n        let code = ``\n        group\n            .filter((control, i) => (condition ? condition(i) : true))\n            .forEach(control => {\n                if (this.isModified(control.name)) {\n                    switch (control.type) {\n                        case 'text':\n                        case 'linecap':\n                        case 'color':\n                            code += `    ${control.name}=\"${\n                                this.props[control.name]\n                            }\"\\n`\n                            break\n                        case 'checkbox':\n                            code += `    ${control.name}\\n`\n                            break\n                        default:\n                            code += `    ${control.name}={${\n                                this.props[control.name]\n                            }}\\n`\n                            break\n                    }\n                }\n            })\n        return code\n    }\n\n    renderCode = () => {\n        let code = `import ProgressBar from 'react-customizable-progressbar'\\n\\n`\n        code += `<ProgressBar\\n`\n        code += `    radius={${this.props.radius}}\\n`\n        code += `    progress={${this.props.progress}}\\n`\n\n        code += this.renderGroup(mainGroup, i => i > 1)\n        code += this.renderGroup(progressGroup)\n        code += this.renderGroup(trackGroup)\n        code += this.renderGroup(pointerGroup)\n\n        code += `/>`\n\n        return (\n            <PrismCode component=\"pre\" className=\"language-markup\">\n                {code}\n            </PrismCode>\n        )\n    }\n\n    render = () => {\n        const { codeVisible } = this.props\n\n        return (\n            <div className=\"implementation-code\">\n                {this.renderButton()}\n                {codeVisible && this.renderCode()}\n            </div>\n        )\n    }\n}\n\nImplementationCode.propTypes = {\n    codeVisible: PropTypes.bool.isRequired,\n    toggleCode: PropTypes.func.isRequired\n}\n\nexport default ImplementationCode\n","export const defaultState = {\n    radius: 100,\n    progress: 66,\n    steps: 100,\n    cut: 0,\n    rotate: -90,\n    strokeWidth: 20,\n    strokeColor: 'indianred',\n    fillColor: 'none',\n    strokeLinecap: 'round',\n    transition: '.3s ease',\n    pointerRadius: 0,\n    pointerStrokeWidth: 20,\n    pointerStrokeColor: 'indianred',\n    pointerFillColor: 'white',\n    trackStrokeColor: '#e6e6e6',\n    trackStrokeWidth: 20,\n    trackStrokeLinecap: 'round',\n    trackTransition: '.3s ease',\n    counterClockwise: false,\n    inverse: false,\n    initialAnimation: false,\n    initialAnimationDelay: 0,\n    className: null\n}\n\nexport const example1State = {\n    ...defaultState,\n    strokeWidth: 18,\n    strokeColor: '#5d9cec',\n    strokeLinecap: 'square',\n    trackStrokeWidth: 18\n}\n\nexport const example2State = {\n    ...defaultState,\n    strokeWidth: 18,\n    strokeColor: '#a0d468',\n    strokeLinecap: 'round',\n    trackStrokeWidth: 18,\n    counterClockwise: true\n}\n\nexport const example3State = {\n    ...defaultState,\n    strokeWidth: 28,\n    strokeColor: '#ffce54',\n    strokeLinecap: 'butt',\n    trackStrokeWidth: 14,\n    trackStrokeLinecap: 'butt',\n    cut: 120,\n    rotate: -210\n}\n\nexport const example4State = {\n    ...defaultState,\n    strokeWidth: 4,\n    strokeColor: 'indianred',\n    trackStrokeWidth: 4,\n    pointerRadius: 8,\n    pointerStrokeWidth: 5,\n    pointerStrokeColor: 'indianred'\n}\n\nexport const example5State = {\n    ...defaultState,\n    fillColor: '#f2f2f2',\n    strokeWidth: 2,\n    strokeColor: '#656d78',\n    trackStrokeWidth: 2,\n    pointerRadius: 12,\n    pointerStrokeWidth: 2,\n    pointerStrokeColor: '#656d78',\n    inverse: true\n}\n","import React from 'react'\nimport ProgressBar from 'react-customizable-progressbar'\nimport Controls from './Controls'\nimport ImplementationCode from './ImplementationCode'\nimport {\n    defaultState,\n    example1State,\n    example2State,\n    example3State,\n    example4State,\n    example5State\n} from './predefinedStates'\nimport './index.scss'\n\nconst Indicator = props => {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                textAlign: 'center',\n                position: 'absolute',\n                top: '0',\n                width: '100%',\n                height: '100%',\n                margin: '0 auto',\n                color: 'black',\n                fontSize: '1.3em',\n                ...props.style\n            }}\n        >\n            <div style={{ fontSize: '1.3em' }}>\n                {props.progress}/{props.steps}\n            </div>\n        </div>\n    )\n}\n\nclass Index extends React.Component {\n    state = {\n        ...defaultState,\n        codeVisible: false\n    }\n\n    handleChange = (key, value) => {\n        this.setState({ [key]: value })\n    }\n\n    handleNumberChange = (key, e) => {\n        this.setState({ [key]: parseInt(e.target.value) })\n    }\n\n    handleCheckboxChange = (key, e) => {\n        this.setState({ [key]: e.target.checked === true })\n    }\n\n    renderThumb = state => (\n        <div onClick={() => this.setState({ ...state })} className=\"thumb\">\n            <ProgressBar\n                {...state}\n                radius={50}\n                strokeWidth={state.strokeWidth / 2}\n                trackStrokeWidth={state.trackStrokeWidth / 2}\n                pointerRadius={state.pointerRadius / 2}\n                pointerStrokeWidth={state.pointerStrokeWidth / 2}\n            >\n                <Indicator\n                    progress={state.progress}\n                    steps={state.steps}\n                    style={{\n                        fontSize: '.7em',\n                        color: '#aaa',\n                        fontWeight: '100'\n                    }}\n                />\n            </ProgressBar>\n        </div>\n    )\n\n    render = () => {\n        const { codeVisible } = this.state\n\n        const handlers = {\n            handleChange: this.handleChange,\n            handleNumberChange: this.handleNumberChange,\n            handleCheckboxChange: this.handleCheckboxChange\n        }\n\n        return (\n            <div className=\"generator\">\n                <div className=\"thumbs\">\n                    {this.renderThumb(defaultState)}\n                    {this.renderThumb(example1State)}\n                    {this.renderThumb(example2State)}\n                    {this.renderThumb(example3State)}\n                    {this.renderThumb(example4State)}\n                    {this.renderThumb(example5State)}\n                </div>\n\n                <div className=\"bar-controls\">\n                    <div className=\"bar\">\n                        <ImplementationCode\n                            {...this.state}\n                            defaultState={defaultState}\n                            toggleCode={codeVisible =>\n                                this.setState({ codeVisible })\n                            }\n                        />\n                        {!codeVisible && (\n                            <ProgressBar\n                                {...this.state}\n                                className=\"progressbar\"\n                            >\n                                <Indicator\n                                    progress={this.state.progress}\n                                    steps={this.state.steps}\n                                />\n                            </ProgressBar>\n                        )}\n                    </div>\n                    <Controls\n                        {...this.state}\n                        {...handlers}\n                        type=\"main\"\n                        defaultState={defaultState}\n                    />\n                </div>\n\n                <div className=\"style-controls\">\n                    <Controls\n                        {...this.state}\n                        {...handlers}\n                        type=\"progress\"\n                        defaultState={defaultState}\n                    />\n                    <Controls\n                        {...this.state}\n                        {...handlers}\n                        type=\"track\"\n                        defaultState={defaultState}\n                    />\n                    <Controls\n                        {...this.state}\n                        {...handlers}\n                        type=\"pointer\"\n                        defaultState={defaultState}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Index\n","import React from 'react'\nimport ReactGA from 'react-ga'\nimport Generator from '../../components/Generator'\n\nimport SEO from '../../components/seo'\n\nimport './generator.scss'\n\n\nconst RCP = () => (\n    <div className=\"rcp-generator\">\n\n        <SEO title=\"Playground / generator of react-customizable-progressbar\" keywords={[`react`, `circle`, `circular`, `progress`, `bar`, `component`, `generator`, `playground`]} />\n\n        <div className=\"header\">\n            <p>Generator of {' '}\n                <a\n                    href=\"https://github.com/martyan/react-customizable-progressbar\"\n                    target=\"_blank\"\n                    onClick={() => ReactGA.event({category: 'User', action: 'Clicked on react-customizable-progressbar'})}\n                >react-customizable-progressbar</a>\n            </p>\n            <p>See{' '}\n                <a\n                    href=\"/react-customizable-progressbar\"\n                    onClick={() => ReactGA.event({category: 'User', action: 'Clicked on react-customizable-progressbar examples'})}\n                >examples</a>\n            </p>\n        </div>\n\n        <Generator />\n\n    </div>\n)\n\nexport default RCP\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n    return (\n        <StaticQuery\n            query={detailsQuery}\n            render={data => {\n                const metaDescription =\n                    description || data.site.siteMetadata.description\n                return (\n                    <Helmet\n                        htmlAttributes={{\n                            lang,\n                        }}\n                        title={title}\n                        titleTemplate={`%s`}\n                        meta={[\n                            {\n                                name: `description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:title`,\n                                content: title,\n                            },\n                            {\n                                property: `og:description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:type`,\n                                content: `website`,\n                            },\n                            {\n                                name: `twitter:card`,\n                                content: `summary`,\n                            },\n                            {\n                                name: `twitter:creator`,\n                                content: data.site.siteMetadata.author,\n                            },\n                            {\n                                name: `twitter:title`,\n                                content: title,\n                            },\n                            {\n                                name: `twitter:description`,\n                                content: metaDescription,\n                            },\n                        ]\n                            .concat(\n                                keywords.length > 0\n                                    ? {\n                                          name: `keywords`,\n                                          content: keywords.join(`, `),\n                                      }\n                                    : []\n                            )\n                            .concat(meta)}\n                    />\n                )\n            }}\n        />\n    )\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n}\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}